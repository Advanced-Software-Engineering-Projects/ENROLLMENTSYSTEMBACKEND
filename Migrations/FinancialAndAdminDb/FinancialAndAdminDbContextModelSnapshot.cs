// <auto-generated />
using System;
using ENROLLMENTSYSTEMBACKEND.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ENROLLMENTSYSTEMBACKEND.Migrations.FinancialAndAdminDb
{
    [DbContext(typeof(FinancialAndAdminDbContext))]
    partial class FinancialAndAdminDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Admin", b =>
                {
                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.CompletionRate", b =>
                {
                    b.Property<int>("CompletionRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompletionRateId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CompletionRateId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("CompletionRates");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemesterOffered")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.EnrollmentData", b =>
                {
                    b.Property<int>("EnrollmentDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentDataId"));

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Students")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentDataId");

                    b.ToTable("EnrollmentData");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Fee", b =>
                {
                    b.Property<int>("FeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeeId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FeeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Hold", b =>
                {
                    b.Property<int>("HoldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoldId"));

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HoldId");

                    b.ToTable("Holds");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.PendingRequest", b =>
                {
                    b.Property<int>("PendingRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PendingRequestId"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PendingRequestId");

                    b.ToTable("PendingRequests");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Prerequisite", b =>
                {
                    b.Property<int>("PrerequisiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrerequisiteId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("PrerequisiteCourseId")
                        .HasColumnType("int");

                    b.HasKey("PrerequisiteId");

                    b.HasIndex("CourseId");

                    b.HasIndex("PrerequisiteCourseId");

                    b.ToTable("Prerequisite");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.ProgramCourse", b =>
                {
                    b.Property<int>("ProgramCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramCourseId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramVersionId")
                        .HasColumnType("int");

                    b.HasKey("ProgramCourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("ProgramVersionId");

                    b.ToTable("ProgramCourse");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.ProgramVersion", b =>
                {
                    b.Property<int>("ProgramVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramVersionId"));

                    b.Property<int>("HandbookYear")
                        .HasColumnType("int");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int>("TotalCreditsRequired")
                        .HasColumnType("int");

                    b.HasKey("ProgramVersionId");

                    b.HasIndex("ProgramId");

                    b.ToTable("ProgramVersion");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Programs", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramId");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.RegistrationPeriod", b =>
                {
                    b.Property<int>("RegistrationPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationPeriodId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RegistrationPeriodId");

                    b.ToTable("RegistrationPeriods");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnrollmentYear")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramVersionId")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiry")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId");

                    b.HasIndex("ProgramVersionId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.SystemConfig", b =>
                {
                    b.Property<int>("SystemConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SystemConfigId"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SystemConfigId");

                    b.ToTable("SystemConfigs");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.UserActivity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.ToTable("UserActivities");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.CompletionRate", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Enrollment", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Fee", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.Student", "Student")
                        .WithMany("Fees")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Prerequisite", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.Course", "Course")
                        .WithMany("Prerequisites")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.Course", "PrerequisiteCourse")
                        .WithMany()
                        .HasForeignKey("PrerequisiteCourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("PrerequisiteCourse");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.ProgramCourse", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.Course", "Course")
                        .WithMany("ProgramCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.ProgramVersion", "ProgramVersion")
                        .WithMany("ProgramCourses")
                        .HasForeignKey("ProgramVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("ProgramVersion");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.ProgramVersion", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.Programs", "Program")
                        .WithMany("ProgramVersions")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Student", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.ProgramVersion", "ProgramVersion")
                        .WithMany("Students")
                        .HasForeignKey("ProgramVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramVersion");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Course", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Prerequisites");

                    b.Navigation("ProgramCourses");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.ProgramVersion", b =>
                {
                    b.Navigation("ProgramCourses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Programs", b =>
                {
                    b.Navigation("ProgramVersions");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.Student", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Fees");
                });
#pragma warning restore 612, 618
        }
    }
}
