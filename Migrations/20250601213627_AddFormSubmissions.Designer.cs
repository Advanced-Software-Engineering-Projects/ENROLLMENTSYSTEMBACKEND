// <auto-generated />
using System;
using ENROLLMENTSYSTEMBACKEND.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ENROLLMENTSYSTEMBACKEND.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250601213627_AddFormSubmissions")]
    partial class AddFormSubmissions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            // Existing model configuration...

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.FormSubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("FormSubmissions");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.CompassionateAegrotatForm", b =>
                {
                    b.HasBaseType("ENROLLMENTSYSTEMBACKEND.Models.FormSubmission");

                    b.Property<string>("ApplicantSignature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Campus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportingDocuments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CompassionateAegrotatForms");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.CompletionProgrammeForm", b =>
                {
                    b.HasBaseType("ENROLLMENTSYSTEMBACKEND.Models.FormSubmission");

                    b.Property<string>("ApplicantSignature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeclarationAgreed")
                        .HasColumnType("bit");

                    b.Property<string>("Programme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CompletionProgrammeForms");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.ReconsiderationForm", b =>
                {
                    b.HasBaseType("ENROLLMENTSYSTEMBACKEND.Models.FormSubmission");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseLecturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentGrade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConfirmation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sponsorship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ReconsiderationForms");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.MissedExam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplyingFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompassionateAegrotatFormId")
                        .HasColumnType("int");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamStartTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompassionateAegrotatFormId");

                    b.ToTable("MissedExams");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.FormSubmission", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.CompassionateAegrotatForm", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.FormSubmission", null)
                        .WithOne()
                        .HasForeignKey("ENROLLMENTSYSTEMBACKEND.Models.CompassionateAegrotatForm", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.CompletionProgrammeForm", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.FormSubmission", null)
                        .WithOne()
                        .HasForeignKey("ENROLLMENTSYSTEMBACKEND.Models.CompletionProgrammeForm", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.MissedExam", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.CompassionateAegrotatForm", null)
                        .WithMany("MissedExams")
                        .HasForeignKey("CompassionateAegrotatFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.ReconsiderationForm", b =>
                {
                    b.HasOne("ENROLLMENTSYSTEMBACKEND.Models.FormSubmission", null)
                        .WithOne()
                        .HasForeignKey("ENROLLMENTSYSTEMBACKEND.Models.ReconsiderationForm", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ENROLLMENTSYSTEMBACKEND.Models.CompassionateAegrotatForm", b =>
                {
                    b.Navigation("MissedExams");
                });
        }
    }
}